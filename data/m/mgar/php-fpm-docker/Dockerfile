FROM debian:jessie

MAINTAINER Miguel Angel Garcia <mgarcia.inf@gmail.com>

ENV PACKAGE_LIST memcache tidy

ENV SS_DEPS \
        wget \
        curl \
        git \
        vim \
        locales \
        openssh-client \
        libmysqld-dev \
        libssl-dev \
        libtidy-dev \
        libmemcached-dev \
        libmcrypt4 \
        libjpeg62 \
        libpng12-0 \
        libxslt1.1 \
        libpcre3 \
        librecode0 \
        libfreetype6 \
        libfreetype6-dev

# persistent / runtime deps
ENV PHPIZE_DEPS \
		autoconf \
		file \
		g++ \
		gcc \
		libc-dev \
		make \
		pkg-config \
		re2c
RUN apt-get update && apt-get install -y \
		$PHPIZE_DEPS \
        $SS_DEPS \
		ca-certificates \
		libedit2 \
		libsqlite3-0 \
		libxml2 \
	--no-install-recommends && rm -r /var/lib/apt/lists/*

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
RUN apt-get update && apt-get install -y apache2-bin apache2.2-common --no-install-recommends && rm -rf /var/lib/apt/lists/*

RUN rm -rf /var/www/html && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html

# Apache + PHP requires preforking Apache for best results
RUN a2dismod mpm_event && a2enmod mpm_prefork

RUN mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.dist && rm /etc/apache2/conf-enabled/* /etc/apache2/sites-enabled/*
COPY apache2.conf /etc/apache2/apache2.conf
# it'd be nice if we could not COPY apache2.conf until the end of the Dockerfile, but its contents are checked by PHP during compilation

ENV PHP_EXTRA_BUILD_DEPS apache2-dev
ENV PHP_EXTRA_CONFIGURE_ARGS --with-apxs2
##</autogenerated>##

# Copy Docker extension tools
COPY docker-php-ext-* /usr/local/bin/

ENV GPG_KEYS 0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3

ENV PHP_VERSION 5.6.22
ENV PHP_FILENAME php-5.6.22.tar.xz
ENV PHP_SHA256 c96980d7de1d66c821a4ee5809df0076f925b2fe0b8c362d234d92f2f0a178e2

RUN set -xe \
	&& buildDeps=" \
    $PHP_EXTRA_BUILD_DEPS \
    libmhash2 \
    libmcrypt-dev \
    bzip2 \
    unzip \
    libbz2-dev \
    libicu-dev \
    libgmp3-dev \
    libpcre3-dev \
    libjpeg-dev \
    libpng12-dev \
    libreadline6-dev \
    librecode-dev \
    libsqlite3-dev \
    libssl-dev \
    libxml2-dev \
    libcurl4-gnutls-dev \
    libxslt1-dev \
    libltdl-dev \
	" \
	&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
	&& curl -fSL "http://php.net/get/$PHP_FILENAME/from/this/mirror" -o "$PHP_FILENAME" \
    && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \
	&& echo "$PHP_SHA256 *$PHP_FILENAME" | sha256sum -c - \
	&& curl -fSL "http://php.net/get/$PHP_FILENAME.asc/from/this/mirror" -o "$PHP_FILENAME.asc" \
	&& export GNUPGHOME="$(mktemp -d)" \
	&& for key in $GPG_KEYS; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
	done \
	&& gpg --batch --verify "$PHP_FILENAME.asc" "$PHP_FILENAME" \
	&& rm -r "$GNUPGHOME" "$PHP_FILENAME.asc" \
	&& mkdir -p /usr/src/php \
	&& tar -xf "$PHP_FILENAME" -C /usr/src/php --strip-components=1 \
	&& rm "$PHP_FILENAME" \
	&& cd /usr/src/php \
	&& ./configure \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		$PHP_EXTRA_CONFIGURE_ARGS \
        --enable-maintainer-zts \
        --disable-cgi \
        --enable-bcmath \
        --enable-calendar \
        --enable-exif \
        --enable-mbstring \
    	--enable-mysqlnd \
        --enable-pcntl \
        --enable-shmop \
        --enable-soap \
        --enable-sockets \
        --enable-sysvmsg \
        --enable-sysvsem \
        --enable-sysvshm \
        --enable-wddx \
        --enable-zip \
        --with-bz2 \
    	--with-curl \
        --with-gettext \
        --with-gd --with-freetype-dir=/usr/lib/x86_64-linux-gnu \
        --with-gmp \
        --with-jpeg-dir \
    	--with-mcrypt \
        --with-mysql \
        --with-mysqli \
        --with-openssl-dir=/usr/local/ssl \
        --with-openssl \
        --with-pcre-regex \
        --with-pdo-mysql \
    	--with-readline \
    	--with-recode \
    	--with-zlib \
        --with-xsl \
        --with-tidy \
	&& make -j"$(nproc)" \
	&& make install \
	&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
	&& make clean \
    && chmod +x /usr/local/bin/docker-php-ext-* && sync \
    && cd /usr/src/php/ext && pecl download $PACKAGE_LIST \

    && for PACKAGE in $PACKAGE_LIST; do tar zxf $PACKAGE-* \
    && rm -f $PACKAGE*.tgz && mv $PACKAGE-* $PACKAGE && docker-php-ext-configure $PACKAGE; done \
    && curl -LO https://s3-eu-west-1.amazonaws.com/cmp-docker-files/php-waencrypt.zip \
    && unzip php-waencrypt.zip && rm -f php-waencrypt.zip && mv php-waencrypt waencrypt \
    && pecl download memcached xdebug-2.2.7 && tar xzf memcached-* && rm -f memcached-*.tgz && mv memcached-* memcached \
    && tar xzf xdebug-* && rm -f xdebug-*.tgz && mv xdebug-* xdebug \
    && docker-php-ext-configure waencrypt \
    && docker-php-ext-configure memcached --disable-memcached-sasl \
    && docker-php-ext-install xdebug memcache tidy memcached waencrypt opcache \
    && echo "zend_extension=\"/usr/local/lib/php/extensions/no-debug-zts-20131226/xdebug.so\"" > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && docker-php-ext-configure waencrypt \
    && docker-php-ext-install waencrypt \
    && docker-php-ext-configure tidy \
    && docker-php-ext-install tidy && rm -f /usr/local/etc/php/conf.d/docker-php-ext-tidy.ini \

    && curl -LO http://home.digithi.de/digithi/dev/mod_auth_cookie_mysql/mod_auth_cookie_mysql2_1.0.tar.gz \
    && tar zxvpf mod_auth_cookie_mysql2_1.0.tar.gz && mv mod_auth_cookie_mysql2_1.0 auth_cookie_mysql2  \
    && sed s/remote_ip/client_ip/g -i auth_cookie_mysql2/* \
    && docker-php-ext-install auth_cookie_mysql2 \

    && curl -fsSL 'https://xcache.lighttpd.net/pub/Releases/3.2.0/xcache-3.2.0.tar.gz' -o /tmp/xcache.tar.gz \
    && mkdir -p /tmp/xcache \
    && tar -xf /tmp/xcache.tar.gz -C /tmp/xcache --strip-components=1 \
    && cd /tmp/xcache \
    && phpize \
    && ./configure --enable-xcache \
    && make -j$(nproc) \
    && make install \
    && docker-php-ext-enable xcache \
    && cd / \
    && rm -rf /tmp/xcache* \

    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDepss \
    && php -m

COPY apache2-foreground /usr/local/bin/
RUN chmod +x /usr/local/bin/apache2-foreground
WORKDIR /var/www/html

EXPOSE 80
CMD ["apache2-foreground"]
