
##################################################
#                                                #
# DO NOT EDIT THIS FILE MANUALLY                 #
# AUTOMATICALLY CREATED WITH docker-builder.sh   #
#                                                #
##################################################
  

FROM whatwedo/base:latest
RUN apt-get update -y && \
apt-get install -y apache2
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
RUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR && \
rm -rf /var/www/html/* && \
chown -R www-data /var/www/ && \
chmod -R 755 /var/www/ && \
sed -i '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride all/' /etc/apache2/apache2.conf && \
echo "#\0041/bin/bash" > /bin/start-apache && \
echo "rm -rf /run/httpd/*" >> /bin/start-apache && \
echo "apache2 -D FOREGROUND" >> /bin/start-apache && \
chmod 755 /bin/start-apache && \
touch /var/log/apache2/access.log && chown www-data /var/log/apache2/access.log && \
touch /var/log/apache2/error.log && chown www-data /var/log/apache2/error.log
COPY files/supervisord/apache.conf /etc/supervisor/conf.d/apache.conf
RUN add-apt-repository -y ppa:ondrej/php && \
apt-get update && \
apt-get install php5.6-cli php5.6-common php5.6-cgi php5.6-curl php5.6-imagick php5.6-imap php5.6-pgsql php5.6-sqlite php5.6-mysql php5.6-fpm php5.6-mcrypt php5.6-ldap php5.6-json php5.6-intl php5.6-gd php5.6-xml php5.6-mbstring php5.6-dom -y && \
echo "cgi.fix_pathinfo = 0;" >> /etc/php/5.6/fpm/php.ini && \
echo "php_flag[expose_php] = Off" >> /etc/php/5.6/fpm/pool.d/www.conf && \
echo "php_admin_value[upload_max_filesize] = 32M" >> /etc/php/5.6/fpm/pool.d/www.conf && \
echo "php_admin_value[post_max_size] = 32M" >> /etc/php/5.6/fpm/pool.d/www.conf && \
echo "php_flag[display_errors] = off" >> /etc/php/5.6/fpm/pool.d/www.conf && \
echo "php_admin_flag[log_errors] = on" >> /etc/php/5.6/fpm/pool.d/www.conf && \
echo "php_flag[expose_php] = Off" >> /etc/php/5.6/fpm/pool.d/www.conf && \
chmod -R 777 /var/lib/php/sessions && \
apt-get install -y libapache2-mod-php5.6 && \
wget --quiet -O - http://packages.icinga.org/icinga.key | apt-key add - && \
echo "deb http://packages.icinga.org/ubuntu icinga-trusty main" >> /etc/apt/sources.list && \
apt-get update -y && \
apt-get -y install icinga2 icinga2-ido-mysql icinga2-classicui nagios-plugins icingaweb2 nmap php-htmlpurifier && \
apt-get -y install nagios-nrpe-plugin --no-install-recommends && \
icinga2 feature enable ido-mysql && \
icinga2 feature enable command
ADD files/icinga/plugins /usr/lib/nagios/plugins
RUN chmod 755 /usr/lib/nagios/plugins/check_rbl && \
chmod 755 /usr/lib/nagios/plugins/check_senderscore && \
chmod 755 /usr/lib/nagios/plugins/check_open_ports && \
chmod 755 /usr/lib/nagios/plugins/check_symfony && \
apt-get -y install libwww-perl libcrypt-ssleay-perl && \
wget https://raw.github.com/tinyspeck/services-examples/master/nagios.pl && \
mv nagios.pl /usr/local/bin/slack_nagios.pl && \
chmod 755 /usr/local/bin/slack_nagios.pl && \
addgroup --system icingaweb2 && \
usermod -a -G icingaweb2 www-data && \
/etc/init.d/icinga2 start && sleep 30 && /etc/init.d/icinga2 stop && \
echo '<?php header("location: /icingaweb2"); ?>' > /var/www/html/index.php && \
echo 'echo date.timezone = ${CONTAINER_TIMEZONE:=Europe/Zurich} >> /etc/php/5.6/apache2/php.ini' >> /bin/everyboot && \
echo "icingacli setup config directory --group icingaweb2" >> /bin/everyboot && \
echo 'echo "---------------------------------------------------"' >> /bin/firstboot && \
echo 'test "$(ls -A /etc/icinga2)" || cp -a /etc/icinga2_copy/. /etc/icinga2/' >> /bin/firstboot && \
echo 'test "$(ls -A /etc/icingaweb2)" || cp -a /etc/icingaweb2_copy/. /etc/icingaweb2/' >> /bin/firstboot && \
echo 'test "$(ls -A /var/lib/icinga2)" || cp -a /var/lib/icinga2_copy/. /var/lib/icinga2/' >> /bin/firstboot && \
echo 'test "$(ls -A /etc/icinga2-classicui)" || cp -a /etc/icinga2-classicui_copy/. /etc/icinga2-classicui/' >> /bin/firstboot && \
echo "icingacli setup token create" >> /bin/firstboot && \
echo 'echo "---------------------------------------------------"' >> /bin/firstboot && \
echo "chgrp -R icingaweb2 /etc/icingaweb2/setup.token" >> /bin/firstboot && \
echo "chmod -R 777 /etc/icingaweb2" >> /bin/firstboot && \
echo 'echo "dbc_install=\"true\"" > /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_upgrade=\"true\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_remove=\"\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_dbtype=\"mysql\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_ssl=\"\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_dbadmin=\"root\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_basepath=\"\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_authmethod_admin=\"\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_authmethod_user=\"\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_dbuser=\"${DB_USER}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_dbpass=\"${DB_PW}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_dbserver=\"${DB_SERVER}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_dbport=\"${DB_PORT}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "dbc_dbname=\"${DB_NAME}\"" >> /etc/dbconfig-common/icinga2-ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "library \"db_ido_mysql\"" > /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "object IdoMysqlConnection \"ido-mysql\" {" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "user = \"${DB_USER}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "password = \"${DB_PW}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "host = \"${DB_SERVER}\"," >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "port = \"${DB_PORT}\"" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "database = \"${DB_NAME}\"" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'echo "}" >> /etc/icinga2/features-available/ido-mysql.conf' >> /bin/everyboot && \
echo 'rm -f /etc/icinga2-classicui/htpasswd.users && htpasswd -b -c /etc/icinga2-classicui/htpasswd.users icingaadmin ${ICINGAADMIN_PW}' >> /bin/everyboot && \
echo 'sleep 30' >> /bin/firstboot && \
echo 'mysql -u ${DB_USER} -p${DB_PW} -h ${DB_SERVER} -P ${DB_PORT} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME}"' >> /bin/firstboot && \
echo 'mysql -u ${DB_USER} -p${DB_PW} -h ${DB_SERVER} -D ${DB_NAME} -P ${DB_PORT} < /usr/share/icinga2-ido-mysql/schema/mysql.sql' >> /bin/firstboot
COPY files/supervisord/icinga2.conf /etc/supervisor/conf.d/icinga2.conf
RUN cp -a /etc/icinga2 /etc/icinga2_copy && \
cp -a /etc/icingaweb2 /etc/icingaweb2_copy && \
cp -a /var/lib/icinga2 /var/lib/icinga2_copy && \
cp -a /etc/icinga2-classicui /etc/icinga2-classicui_copy && \
apt-get autoremove -y && \
apt-get clean -y && \
rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
VOLUME  ["/etc/icinga2", "/etc/icingaweb2", "/var/lib/icinga2", "/etc/icinga2-classicui"]
LABEL ch.whatwedo.image.base="whatwedo/icinga2"
