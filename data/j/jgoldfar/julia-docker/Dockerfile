FROM jgoldfar/julia-docker:reqs-dev-latest

# https://julialang.org/downloads/
ENV JULIA_VERSION 0.7.0

RUN set -eux; \
  \
  savedAptMark="$(apt-mark showmanual)"; \
  if ! command -v gpg > /dev/null; then \
    apt-get update; \
    apt-get install -y --no-install-recommends \
      gnupg2 \
      dirmngr \
    ; \
    rm -rf /var/lib/apt/lists/*; \
  fi; \
  \
# https://julialang.org/downloads/#julia-command-line-version
# https://julialang-s3.julialang.org/bin/checksums/julia-0.7.0.sha256
# this "case" statement is generated via "update.sh"
  dpkgArch="$(dpkg --print-architecture)"; \
  case "${dpkgArch##*-}" in \
# amd64
    amd64) tarArch='x86_64'; dirArch='x64'; sha256='35211bb89b060bfffe81e590b8aeb8103f059815953337453f632db9d96c1bd6' ;; \
# i386
    i386) tarArch='i686'; dirArch='x86'; sha256='36a40cf0c4bd8f82c3c8b270ba34bb83af2d545bfbab135e8e496520304cb160' ;; \
    *) echo >&2 "error: current architecture ($dpkgArch) does not have a corresponding Julia binary release"; exit 1 ;; \
  esac; \
  \
  folder="$(echo "$JULIA_VERSION" | cut -d. -f1-2)"; \
  curl -fL -o julia.tar.gz.asc "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc"; \
  curl -fL -o julia.tar.gz     "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz"; \
  \
  echo "${sha256} *julia.tar.gz" | sha256sum -c -; \
  \
  export GNUPGHOME="$(mktemp -d)"; \
  ( gpg2 --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$JULIA_GPG" \
  || gpg2 --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$JULIA_GPG" \
  || gpg2 --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$JULIA_GPG" \
  || gpg2 --batch --keyserver keyserver.pgp.com --recv-keys "$JULIA_GPG" ) ; \
  gpg2 --batch --verify julia.tar.gz.asc julia.tar.gz; \
  command -v gpgconf > /dev/null && gpgconf --kill all; \
  rm -rf "$GNUPGHOME" julia.tar.gz.asc; \
  \
  mkdir "$JULIA_PATH"; \
  tar -xzf julia.tar.gz -C "$JULIA_PATH" --strip-components 1; \
  rm julia.tar.gz; \
  \
  apt-mark auto '.*' > /dev/null; \
  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
  \
# smoke test
  julia --version

CMD ["julia"]
