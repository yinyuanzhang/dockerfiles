FROM wodby/drupal-php:7.1-2.4.4
MAINTAINER pixelcat <aaron@dployr.com>

RUN apk add --update \
    openldap \
    openldap-dev \

    # Temp packages
    build-base \
    autoconf \
    automake \
    libtool \
    pcre-dev \
    libbz2 \
    bzip2-dev \
    libjpeg \
    libpng-dev \
    libxslt-dev \
    imagemagick-dev \
    libmcrypt-dev \
    file

# persistent / runtime deps
ENV PHPIZE_DEPS \
		autoconf \
		file \
		g++ \
		gcc \
		libc-dev \
		make \
		automake \
		pkgconf \
		re2c \
		automake
RUN apk add --no-cache --virtual .persistent-deps \
		ca-certificates \
		tar \
		xz

# http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2
# http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2
# http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
##</autogenerated>##

# Apply stack smash protection to functions using local buffers and alloca()
# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)
# Enable optimization (-O2)
# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)
# Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)
# https://github.com/docker-library/php/issues/272
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"

ENV GPG_KEYS="31CBD89E 7BD5DCD0"

ENV PHP_VERSION 7.1.7
ENV PHP_URL="https://secure.php.net/get/php-7.1.7.tar.xz/from/this/mirror" PHP_ASC_URL="https://secure.php.net/get/php-7.1.7.tar.xz.asc/from/this/mirror"
ENV PHP_SHA256="0d42089729be7b2bb0308cbe189c2782f9cb4b07078c8a235495be5874fff729"
RUN set -xe; \
  apk add --no-cache --virtual .fetch-deps \
		gnupg \
	; \
	\
	mkdir -p /usr/src; \
	cd /usr/src; \
	\
	wget -q -O php.tar.xz "$PHP_URL"; \
	\
	if [ -n "$PHP_SHA256" ]; then \
		echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; \
	fi; \
	if [ -n "$PHP_MD5" ]; then \
		echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; \
	fi; \
	\
	if [ -n "$PHP_ASC_URL" ]; then \
		wget -q -O php.tar.xz.asc "$PHP_ASC_URL"; \
		export GNUPGHOME="$(mktemp -d)"; \
		for key in $GPG_KEYS; do \
			gpg --keyserver ipv4.pool.sks-keyservers.net --recv-keys "$key"; \
		done; \
		gpg --batch --verify php.tar.xz.asc php.tar.xz; \
	fi;

COPY docker-php-source /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-php-source

# install libbson
RUN set -xe \
  && cd /usr/share && ln -sfn automake-1.15 automake-1.14 \
  && cd /usr/bin && ln -sfn automake automake-1.14 \
  && cd /usr/src \
  && mkdir -p libbson \
  && wget -q -O libbson.tar.gz https://github.com/mongodb/libbson/releases/download/1.2.0/libbson-1.2.0.tar.gz \
  && tar -xzf libbson.tar.gz -C libbson --strip-components=1 \
  && cd /usr/src/libbson \
  && ./configure \
  && aclocal \
  && make \
  && make install \
  && cd /usr/src \
  && mkdir -p mongoc \
  && wget -q -O mongoc.tar.gz https://github.com/mongodb/mongo-c-driver/releases/download/1.2.0/mongo-c-driver-1.2.0.tar.gz \
  && tar -xzf mongoc.tar.gz -C mongoc --strip-components=1 \
  && cd mongoc \
  && ./configure --with-libbson=/usr/local \
  && make \
  && make install \
  && rm -rf /usr/src/mongoc \
  && cd /usr/src \
  && wget -q -O mongodb.tgz http://pecl.php.net/get/mongodb-1.2.5.tgz \
  && mkdir -p mongodb && tar -xzf mongodb.tgz -C mongodb --strip-components=1 \
  && cd /usr/src/mongodb && phpize && ./configure && make && make install \
  && rm -rf /usr/src/mongodb \
  && rm -rf /usr/src/libbson \
  && rm -rf /usr/src/mongoc

RUN set -xe \
  && docker-php-source delete

RUN set -xe \
	apk add --no-cache --virtual .php-rundeps $runDeps \
  && apk del .fetch-deps \
	&& apk del --purge \
    *-dev \
    build-base \
    autoconf \
    libtool

COPY RapidSSL-SO28590.crt /usr/local/share/ca-certificates/

RUN set -xe \
    && update-ca-certificates

USER root
COPY docker-entrypoint.sh /usr/local/bin/
CMD docker-entrypoint.sh
